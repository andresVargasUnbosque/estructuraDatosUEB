/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Pelicula;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author andres Vargas, Alejandro Forez y Cristian Morera
 */
public class ventanaListaRegistros extends javax.swing.JFrame {

    public DefaultTableModel modelo;
    int filas;
    public ArrayList<Pelicula> arregloPeliculas = new ArrayList<>();

    /**
     * El metodo ventanaListaRegistros es el metodo constructor y permite
     * inicializar los elementos del formulario de la clase, el arreglo de
     * peliculasu y el modelo de la tabla ademas de hacer el llamado a la clase
     * MenuPrincipalJFrame para que las variables anterioires funcionen.
     */
    public ventanaListaRegistros() {
        initComponents();
        MenuPrincipalJFrame frame = new MenuPrincipalJFrame();
        arregloPeliculas = frame.retornarPeliculas();
        modelo = frame.cargarArchivo();
        this.jTablePeliculas.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAgregar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldTitulo = new javax.swing.JTextField();
        jTextFieldEstudio = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jTextFieldAno = new javax.swing.JTextField();
        jTextFieldFechaPublicacion = new javax.swing.JTextField();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jComboBoxCalificacion = new javax.swing.JComboBox<>();
        jComboBoxGenero = new javax.swing.JComboBox<>();
        jComboBoxVersion = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePeliculas = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxFiltro = new javax.swing.JComboBox<>();
        jLabelFiltrarPor = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 700));

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 51));
        jLabel1.setText("Listado de Peliculas");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 51));
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 51));
        jLabel3.setText("Titulo");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 51));
        jLabel4.setText("Calificación");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("Año");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setText("Estudio");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 51));
        jLabel7.setText("Estado");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 51));
        jLabel8.setText("Genero");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 0));
        jLabel9.setText("Precio");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));
        jLabel10.setText("Versiones");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 153, 0));
        jLabel11.setText("Fecha de Publicación");

        jTextFieldID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIDKeyTyped(evt);
            }
        });

        jTextFieldPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrecioActionPerformed(evt);
            }
        });
        jTextFieldPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPrecioKeyTyped(evt);
            }
        });

        jTextFieldAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAnoKeyTyped(evt);
            }
        });

        jTextFieldFechaPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFechaPublicacionActionPerformed(evt);
            }
        });

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cancelada", "Descontinuada", "Fuera", "Pendiente", "Pospuesta", "Retransmitida" }));

        jComboBoxCalificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acompañado por un Adulto", "Apta para mayores de 13", "Apta para mayores de 15", "Apta para mayores de 17", "Apta para mayores de 18", "Apta para menores de 13", "No Clasificado", "Publico General" }));
        jComboBoxCalificacion.setRequestFocusEnabled(false);

        jComboBoxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acccion/Aventura", "Accion/Comedia", "Animada", "Anime", "Ballet", "Comedia", "Comedia/Drama", "Danza/Ballet", "Deportes", "Documental", "Drama", "Eroticas", "Familia", "Fantasia", "Guerra", "Horror", "Interes Especial", "Interculturales", "Juegos", "Karaoke", "Musica", "Miedo", "Muda", "Musical", "Misterio/Suspenso", "Oeste", "Opera", "S tira", "SciFi", "Software", "Suspenso/Miedo", "TV Classics", "Varios" }));

        jComboBoxVersion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4:03", "0.16875", "4:3 P&S", "4:3 P&S, LBX", "4:3 P&S, 16:9", "4:3 P&S, MINI DVD", "4:3 P&S, UMD", "4:3,  BLUE-RAY", "4:3,  DUALDISC", "4:3,  GAMECUBE", "4:3,  HD-DVD", "4:3, V LBX", "4:3, LBX, 16:9", "4:3, MINI DVD", "4:3, PS2", "4:3, PSP", "4:3, UMD", "4:3, WMVHD", "4:3, XBOX", "LBX", "LBX, 16:9", "LBX, 16:9, 16:9", "LBX, 16:9, BLU-RAY", "LBX, 16:9, DUALDISC", "LBX, 16:9, HD-DVD", "LBX, 16:9, MINI DVD", "LBX, 16:9, PS2", "LBX, 16:9, UMD", "LBX, 16:9, WMVHD", "LBX, 16:9, XBOX", "LBX, UMD", "LBX, WMVHD", "VAR", " ", " " }));
        jComboBoxVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVersionActionPerformed(evt);
            }
        });

        jTablePeliculas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTablePeliculas.setForeground(new java.awt.Color(0, 153, 51));
        jTablePeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Titulo", "Estudio", "Estado", "Versiones", "Precio", "Calificación", "Año", "Genero", "Fecha de Publicación"
            }
        ));
        jTablePeliculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePeliculasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePeliculas);

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\andre\\Desktop\\UEBlogo2.png")); // NOI18N

        jComboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------------", "Fecha", "Genero", "Título", "Por Costos", "Clasificación", "Versiones", "" }));

        jLabelFiltrarPor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelFiltrarPor.setForeground(new java.awt.Color(0, 153, 51));
        jLabelFiltrarPor.setText("Filtrar Por:");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFiltrarPor)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel9)
                                    .addComponent(jTextFieldID)
                                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jComboBoxCalificacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextFieldAno, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextFieldEstudio, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jComboBoxGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)
                                        .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jTextFieldFechaPublicacion)
                                    .addComponent(jComboBoxVersion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(botonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel12)
                                        .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(32, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEstudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFechaPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addComponent(jLabelFiltrarPor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(botonAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(botonModificar)
                        .addGap(18, 18, 18)
                        .addComponent(botonEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonGuardar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldFechaPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFechaPublicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFechaPublicacionActionPerformed

    private void jTextFieldPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrecioActionPerformed

    /**
     * El metodo del boton botonModificarActionPerformed permite modificar y
     * alamcenar los registros de la tabla.
     */
    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        // TODO add your handling code here:
        String[] informacion = new String[10];

        informacion[0] = jTextFieldTitulo.getText();
        informacion[1] = jTextFieldEstudio.getText();
        informacion[2] = (String) jComboBoxEstado.getSelectedItem();
        informacion[3] = (String) jComboBoxVersion.getSelectedItem();
        informacion[4] = jTextFieldPrecio.getText();
        informacion[5] = (String) jComboBoxCalificacion.getSelectedItem();
        informacion[6] = jTextFieldAno.getText();
        informacion[7] = (String) jComboBoxGenero.getSelectedItem();
        informacion[8] = jTextFieldFechaPublicacion.getText();
        informacion[9] = jTextFieldID.getText();

        for (int i = 0; i < jTablePeliculas.getColumnCount(); i++) {
            modelo.setValueAt(informacion[i], filas, i);
        }
    }//GEN-LAST:event_botonModificarActionPerformed

    /**
     * El metodo del boton botonModificarActionPerformed permite modificar y
     * almacenar nuevos registros a la tabla.
     */
    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        // TODO add your handling code here:
        String[] informacion = new String[10];

        informacion[0] = jTextFieldTitulo.getText();
        informacion[1] = jTextFieldEstudio.getText();
        informacion[2] = (String) jComboBoxEstado.getSelectedItem();
        informacion[3] = (String) jComboBoxVersion.getSelectedItem();
        informacion[4] = jTextFieldPrecio.getText();
        informacion[5] = (String) jComboBoxCalificacion.getSelectedItem();
        informacion[6] = jTextFieldAno.getText();
        informacion[7] = (String) jComboBoxGenero.getSelectedItem();
        informacion[8] = jTextFieldFechaPublicacion.getText();
        informacion[9] = jTextFieldID.getText();

        modelo.addRow(informacion);
        jTextFieldID.setText("");
        jTextFieldTitulo.setText("");
        jTextFieldEstudio.setText("");
        jTextFieldPrecio.setText("");
        jTextFieldAno.setText("");
        jTextFieldFechaPublicacion.setText("");

    }//GEN-LAST:event_botonAgregarActionPerformed

    private void jComboBoxVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVersionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxVersionActionPerformed

    /**
     * El metodo del jTablePeliculasMouseClicked permite seleccionar y mostrar
     * un registro seleccionado para poder modificarlo.
     */
    private void jTablePeliculasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePeliculasMouseClicked
        // TODO add your handling code here:
        int seleccion = jTablePeliculas.getSelectedRow();

        jTextFieldTitulo.setText(jTablePeliculas.getValueAt(seleccion, 0).toString());
        jTextFieldEstudio.setText(jTablePeliculas.getValueAt(seleccion, 1).toString());
        jComboBoxEstado.setSelectedItem(jTablePeliculas.getValueAt(seleccion, 2).toString());
        jComboBoxVersion.setSelectedItem(jTablePeliculas.getValueAt(seleccion, 3).toString());
        jTextFieldPrecio.setText(jTablePeliculas.getValueAt(seleccion, 4).toString());
        jComboBoxCalificacion.setSelectedItem(jTablePeliculas.getValueAt(seleccion, 5).toString());
        jTextFieldAno.setText(jTablePeliculas.getValueAt(seleccion, 6).toString());
        jComboBoxGenero.setSelectedItem(jTablePeliculas.getValueAt(seleccion, 7).toString());
        jTextFieldFechaPublicacion.setText(jTablePeliculas.getValueAt(seleccion, 8).toString());
        jTextFieldID.setText(jTablePeliculas.getValueAt(seleccion, 9).toString());

        filas = seleccion;
    }//GEN-LAST:event_jTablePeliculasMouseClicked

    /**
     * El metodo del boton botonEliminarActionPerformed permite eliminar un
     * registro de la tabla.
     */
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        // TODO add your handling code here:
        int fila = jTablePeliculas.getSelectedRow();
        if (fila >= 0) {
            modelo.removeRow(fila);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila");
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        try {
            // TODO add your handling code here:
            exportarExcel();
        } catch (IOException ex) {
            Logger.getLogger(ventanaListaRegistros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    /**
     * El metodo exportarExcel permite exportar la tabla a un archivo csv.
     */
    public void exportarExcel() throws IOException {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString().concat(".xls");
            try {
                File archivoXLS = new File(ruta);
                if (archivoXLS.exists()) {
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();
                Workbook libro = new HSSFWorkbook();
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                Sheet hoja = libro.createSheet("Mi hoja de trabajo 1");
                hoja.setDisplayGridlines(false);
                for (int f = 0; f < jTablePeliculas.getRowCount(); f++) {
                    Row fila = hoja.createRow(f);
                    for (int c = 0; c < jTablePeliculas.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (f == 0) {
                            celda.setCellValue(jTablePeliculas.getColumnName(c));
                        }
                    }
                }
                int filaInicio = 1;
                for (int f = 0; f < jTablePeliculas.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio);
                    filaInicio++;
                    for (int c = 0; c < jTablePeliculas.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (jTablePeliculas.getValueAt(f, c) instanceof Double) {
                            celda.setCellValue(Double.parseDouble(jTablePeliculas.getValueAt(f, c).toString()));
                        } else if (jTablePeliculas.getValueAt(f, c) instanceof Float) {
                            celda.setCellValue(Float.parseFloat((String) jTablePeliculas.getValueAt(f, c)));
                        } else {
                            celda.setCellValue(String.valueOf(jTablePeliculas.getValueAt(f, c)));
                        }
                    }
                }
                libro.write(archivo);
                archivo.close();
                //Desktop.getDesktop().open(archivoXLS);
            } catch (IOException | NumberFormatException e) {
                throw e;
            }
        }
    }
    private void jTextFieldIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDKeyTyped
        // TODO add your handling code here:
        /* char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }*/
    }//GEN-LAST:event_jTextFieldIDKeyTyped

    private void jTextFieldAnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAnoKeyTyped
        // TODO add your handling code here:
        /* char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }*/
    }//GEN-LAST:event_jTextFieldAnoKeyTyped

    private void jTextFieldPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrecioKeyTyped
        // TODO add your handling code here:
        /* char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }*/
    }//GEN-LAST:event_jTextFieldPrecioKeyTyped

    /**
     * El metodo jButtonBuscarActionPerformed permite realizar el filtro y la
     * busqueda en la tabla de registros.
     */
    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        String valorLista = (String) jComboBoxFiltro.getSelectedItem();
        System.out.println("valorLista:" + valorLista);

        try {

            if (valorLista.equals("Fecha")) {
                //Limpiar tabla
                limpiarData();
                int anio = Integer.parseInt(jTextFieldAno.getText());

                for (Pelicula objArregloPelicula : arregloPeliculas) {
                    if (Integer.parseInt(objArregloPelicula.getAnio()) >= anio) {
                        modelo.addRow(cargarModelo(objArregloPelicula.getId(), objArregloPelicula.getTitulo(), objArregloPelicula.getEstudio(), objArregloPelicula.getEstado(), objArregloPelicula.getVersiones(), objArregloPelicula.getPrecio(), objArregloPelicula.getClasificacion(), objArregloPelicula.getAnio(), objArregloPelicula.getGenero(), objArregloPelicula.getFecha()));
                    }
                }
            } else if (valorLista.equals("Genero")) {
                //Limpiar tabla
                limpiarData();
                String valorGenero = (String) jComboBoxGenero.getSelectedItem();

                for (Pelicula objArregloPelicula : arregloPeliculas) {
                    if (objArregloPelicula.getGenero().equals(valorGenero)) {
                        modelo.addRow(cargarModelo(objArregloPelicula.getId(), objArregloPelicula.getTitulo(), objArregloPelicula.getEstudio(), objArregloPelicula.getEstado(), objArregloPelicula.getVersiones(), objArregloPelicula.getPrecio(), objArregloPelicula.getClasificacion(), objArregloPelicula.getAnio(), objArregloPelicula.getGenero(), objArregloPelicula.getFecha()));
                    }
                }
            } else if (valorLista.equals("Título")) {
                //Limpiar tabla
                limpiarData();
                String titulo = (String) jTextFieldTitulo.getText();

                for (Pelicula objArregloPelicula : arregloPeliculas) {
                    if (objArregloPelicula.getTitulo().equals(titulo)) {
                        modelo.addRow(cargarModelo(objArregloPelicula.getId(), objArregloPelicula.getTitulo(), objArregloPelicula.getEstudio(), objArregloPelicula.getEstado(), objArregloPelicula.getVersiones(), objArregloPelicula.getPrecio(), objArregloPelicula.getClasificacion(), objArregloPelicula.getAnio(), objArregloPelicula.getGenero(), objArregloPelicula.getFecha()));
                    }
                }
            } else if (valorLista.equals("Por Costos")) {
                //Limpiar tabla
                limpiarData();
                int precio = Integer.parseInt(jTextFieldPrecio.getText());
                String valorGenero2 = (String) jComboBoxGenero.getSelectedItem();

                for (Pelicula objArregloPelicula : arregloPeliculas) {
                    if (Integer.parseInt(objArregloPelicula.getPrecio().replaceAll(",00", "")) >= precio && objArregloPelicula.getGenero().equals(valorGenero2)) {
                        modelo.addRow(cargarModelo(objArregloPelicula.getId(), objArregloPelicula.getTitulo(), objArregloPelicula.getEstudio(), objArregloPelicula.getEstado(), objArregloPelicula.getVersiones(), objArregloPelicula.getPrecio(), objArregloPelicula.getClasificacion(), objArregloPelicula.getAnio(), objArregloPelicula.getGenero(), objArregloPelicula.getFecha()));
                    }
                }
            } else if (valorLista.equals("Clasificación")) {
                //Limpiar tabla
                limpiarData();
                String clasificacion = (String) jComboBoxCalificacion.getSelectedItem();

                for (Pelicula objArregloPelicula : arregloPeliculas) {
                    if (objArregloPelicula.getClasificacion().equals(clasificacion)) {
                        modelo.addRow(cargarModelo(objArregloPelicula.getId(), objArregloPelicula.getTitulo(), objArregloPelicula.getEstudio(), objArregloPelicula.getEstado(), objArregloPelicula.getVersiones(), objArregloPelicula.getPrecio(), objArregloPelicula.getClasificacion(), objArregloPelicula.getAnio(), objArregloPelicula.getGenero(), objArregloPelicula.getFecha()));
                    }
                }
            } else if (valorLista.equals("Versiones")) {//versiones
                //Limpiar tabla
                limpiarData();
                String versiones = (String) jComboBoxVersion.getSelectedItem();

                for (Pelicula objArregloPelicula : arregloPeliculas) {
                    if (objArregloPelicula.getVersiones().equals(versiones)) {
                        modelo.addRow(cargarModelo(objArregloPelicula.getId(), objArregloPelicula.getTitulo(), objArregloPelicula.getEstudio(), objArregloPelicula.getEstado(), objArregloPelicula.getVersiones(), objArregloPelicula.getPrecio(), objArregloPelicula.getClasificacion(), objArregloPelicula.getAnio(), objArregloPelicula.getGenero(), objArregloPelicula.getFecha()));
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor seleccione una opción de filtro");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**
     * El metodo limpiarData permite limpiar la tabla de registros.
     */
    public void limpiarData() {
        DefaultTableModel tb = (DefaultTableModel) jTablePeliculas.getModel();
        int a = jTablePeliculas.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
    }

    /**
     * El metodo limpiarData permite limpiar la tabla de registros.
     */
    public Calendar carbiarFecha(String fecha) throws ParseException {

        SimpleDateFormat curFormater = new SimpleDateFormat("dd/MM/yyyy");
        Date dateObj = curFormater.parse(fecha);
        Calendar calendario = Calendar.getInstance();
        calendario.setTime(dateObj);

        return calendario;
    }

    /**
     * El metodo cargarModelo permite cargar la estructura de la tabla de
     * registros.
     *
     * @param titulo: Nombre del ejemplar filmográfico.
     * @param estudio: Estudio productor del ejemplar..
     * @param estado: Estado de la película entre un grupo de estados posibles.
     * @param versiones: Versiones de las películas como HD-DVD, BLUERAY,
     * DUALDISC, entre otros.
     * @param precio:Precio de las peliculas.
     * @param Clasificacion:Indica para qué audiencia o público es apta la
     * película.
     * @param anio: Año en que la película debutó en las salas.
     * @param genero: Genero de la película.
     * @param fecha: Manteniendo el formato “día/mes/año”.
     * @param id:Es el ID de la película.
     */
    public String[] cargarModelo(String id, String titulo, String estudio, String estado, String versiones, String precio, String clasificacion, String anio, String genero, String fechaPublicacion) {
        String[] informacion = new String[10];
        informacion[0] = titulo;
        informacion[1] = estudio;
        informacion[2] = estado;
        informacion[3] = versiones;
        informacion[4] = precio;
        informacion[5] = clasificacion;
        informacion[6] = anio;
        informacion[7] = genero;
        informacion[8] = fechaPublicacion;
        informacion[9] = id;

        return informacion;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaListaRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaListaRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaListaRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaListaRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaListaRegistros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JComboBox<String> jComboBoxCalificacion;
    private javax.swing.JComboBox<String> jComboBoxEstado;
    private javax.swing.JComboBox<String> jComboBoxFiltro;
    private javax.swing.JComboBox<String> jComboBoxGenero;
    private javax.swing.JComboBox<String> jComboBoxVersion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFiltrarPor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePeliculas;
    private javax.swing.JTextField jTextFieldAno;
    private javax.swing.JTextField jTextFieldEstudio;
    private javax.swing.JTextField jTextFieldFechaPublicacion;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldTitulo;
    // End of variables declaration//GEN-END:variables
}
